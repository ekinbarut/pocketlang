## Core builtin functions and attribute tests.

assert(hex(12648430) == '0xc0ffee')
assert(hex(255) == '0xff' and hex(10597059) == '0xa1b2c3')
assert(hex(-4294967295) == '-0xffffffff') ## the largest.



## string attributes.
assert(''.length == 0)
assert('test'.length == 4)
assert(''.lower == '' and ''.upper == '')
assert('already+lower '.lower == 'already+lower ')
assert('ALREADY+UPPER '.upper == 'ALREADY+UPPER ')
assert('tEST+InG'.lower == 'test+ing')
assert('tEST+InG'.upper == 'TEST+ING')

assert(' trim '.strip == 'trim')
assert(''.strip == '')

## List attribute
assert([].length == 0)
assert([1, 2, 3].length == 3)

## Function
assert(print.arity == -1)
assert(hex.arity == 1)
assert(func(a, b)end .arity == 2)
assert(print.name == "print")
def fn(p1, p2, p3) end
assert(fn.name == "fn")
assert(fn.arity == 3)

## range
r = 1..5
assert(r.as_list == [1, 2, 3, 4])
assert(r.first == 1)
assert(r.last == 5)

## Math functions
from math import PI, sin, cos, tan, abs

assert(sin(0) == 0)
assert(sin(PI/2) == 1)

threshold = 0.0000000000001

assert(abs(cos(PI/3) - 0.5) < threshold )
assert(abs(tan(PI/4) - 1.0) < threshold )
for i in 0..1000
  assert(abs(sin(i) / cos(i) - tan(i)) < threshold)
end


# If we got here, that means all test were passed.
print('All TESTS PASSED')
